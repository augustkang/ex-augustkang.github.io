<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>augustkang on augustkang</title>
    <link>https://augustkang.github.io/</link>
    <description>Recent content in augustkang on augustkang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 11 Jul 2019 01:55:00 +0900</lastBuildDate>
    <atom:link href="https://augustkang.github.io/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>[요약]DevOps와 SE를 위한 리눅스 커널 이야기 2장</title>
      <link>https://augustkang.github.io/2019/linux-kernel-story-for-devops-and-se-ch2/</link>
      <pubDate>Thu, 11 Jul 2019 01:55:00 +0900</pubDate>
      
      <guid>https://augustkang.github.io/2019/linux-kernel-story-for-devops-and-se-ch2/</guid>
      <description>

&lt;h1 id=&#34;2장-top을-통해-프로세스-정보-살펴보기&#34;&gt;2장 - top을 통해 프로세스 정보 살펴보기&lt;/h1&gt;

&lt;h3 id=&#34;top-명령어-실행-결과&#34;&gt;top 명령어 실행 결과&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;root@August-PC:~# top -b -n 1
top - 01:57:36 up 58 min,  0 users,  load average: 0.52, 0.58, 0.59
Tasks:   8 total,   1 running,   7 sleeping,   0 stopped,   0 zombie   
%Cpu(s):  9.0 us, 23.3 sy,  0.0 ni, 67.4 id,  0.0 wa,  0.3 hi,  0.0 si,KiB Mem :  8240388 total,  2032052 free,  5978984 used,   229352 buff/cKiB Swap: 25165824 total, 24837212 free,   328612 used.  2127672 avail 

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+    
    1 root      20   0    8916    328    284 S   0.0  0.0   0:00.07    
  880 root      20   0    8916    228    176 S   0.0  0.0   0:00.01    
  881 august    20   0   18356   3764   3448 S   0.0  0.0   0:00.38    
 1074 root      20   0    8916    232    180 S   0.0  0.0   0:00.00    
 1075 august    20   0   18224   3492   3364 S   0.0  0.0   0:00.09    
 1087 root      20   0   16260   2116   2088 S   0.0  0.0   0:00.01    
 1088 root      20   0   18088   3392   3304 S   0.0  0.0   0:00.06    
 1104 root      20   0   18780   1888   1420 R   0.0  0.0   0:00.01
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;line 1: 현재 시스템의 시간과 uptime, 그리고 load average가 나온다&lt;/li&gt;
&lt;li&gt;line 2: 현재 실행중인 process들&lt;/li&gt;
&lt;li&gt;line 3: 리소스 사용량 통계&lt;/li&gt;
&lt;li&gt;PID: process id, PR : Priority, NI : Nice value&lt;/li&gt;
&lt;li&gt;VIRT : VIRTual memory, 해당 프로세스에게 할당된 가상메모리 전체의 크기&lt;/li&gt;
&lt;li&gt;RES: RESident memory, 해당 프로세스가 실제로 사용중인 물리메모리의 양&lt;/li&gt;
&lt;li&gt;S : Process Status&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;memory-commit-의-개념&#34;&gt;Memory Commit 의 개념&lt;/h3&gt;

&lt;p&gt;커널은 프로세스가 메모리를 요청할 때 그에 맞는 크기를 가상으로 할당해준다. 실제로 요청받은 크기 전체만큼 물리메모리에 assign해주지는 않음.
그렇게 있다가 실제로 사용이 필요할 때마다 물리메모리를 조금씩 더 할당을 해줌(늘려줌). 이를 memory commit 이라고 한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vm.overcommit_memory는 커널의 Memory commit 동작 방식을 변경할 수 있게 해주는 커널 파라미터.&lt;/li&gt;
&lt;li&gt;0=최댓값 바탕으로 Memory commit, 1=무조건 overcommit, 2=vm.overcommit_ratio에 설정된 비율을 바탕으로 제한적으로 memory commit&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;커널-파라미터-보는법-sysctl&#34;&gt;커널 파라미터 보는법? sysctl&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;root@August-PC:~# sysctl -a
fs.binfmt_misc.status = enabled
fs.binfmt_misc.WSLInterop = enabled
fs.binfmt_misc.WSLInterop = interpreter /init
...
...
vm.min_free_kbytes = 45056
vm.overcommit_memory = 0
vm.swappiness = 60
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sysctl -a | grep pid_max&lt;/code&gt; 하면 현재 시스템의 생성 가능한 최대 pid 확인 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;프로세스-상태&#34;&gt;프로세스 상태&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Process Status 종류 : D, R, S, T, Z&lt;/li&gt;
&lt;li&gt;D = Uninterruptible sleep - 디스크, 네트워크 디바이스에 작업 요청 후 대기중인 상태(Run queue가 아닌 wait queue에 넣어놓음)&lt;/li&gt;
&lt;li&gt;R = Running - 현재 CPU에서 실행되고 있는 상태&lt;/li&gt;
&lt;li&gt;S = Sleep - 그냥 자고있는 애들. D와의 차이는 요청한 리소스를 즉시 사용할 수 있는지 여부이다.&lt;/li&gt;
&lt;li&gt;T = traced or stopped. strace 등으로 프로세스가 추적되고 있는 상태&lt;/li&gt;
&lt;li&gt;Z = zombie 상태. parent process가 죽은 child process를 의미&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;프로세스-우선-순위&#34;&gt;프로세스 우선 순위&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;기본 PR값은 20이다.&lt;/li&gt;
&lt;li&gt;PR값에서 NI값을 뺀 값이 최종 우선순위가 된다. 숫자 0에 가까울수록 우선순위 높은것(뭔개소리죠??? 직접 해보면 안다&amp;hellip;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nice -n N command&lt;/code&gt; 명령으로 해당 프로세스 nice 값을 부여해줄 수 있음.(N은 원하는 숫자)&lt;/li&gt;
&lt;li&gt;RT는 RealTime의 약자로써, RT 스케줄러에 의해 실시간으로 커널에 의해 처리되는 프로세스들임. CFQ(Completely Fair Queueing) 스케줄러보다 먼저 실행된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;아 커널 소스 나와서 당황했다. 절대 만만치 않은 책인 듯 싶다.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;출처 : &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788966264049&amp;amp;orderClick=LEA&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;DevOps와 SE를 위한 리눅스 커널 이야기&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[요약]DevOps와 SE를 위한 리눅스 커널 이야기 1장</title>
      <link>https://augustkang.github.io/2019/linux-kernel-story-for-devops-and-se-ch1/</link>
      <pubDate>Sat, 22 Jun 2019 00:23:40 +0900</pubDate>
      
      <guid>https://augustkang.github.io/2019/linux-kernel-story-for-devops-and-se-ch1/</guid>
      <description>

&lt;h1 id=&#34;1장-시스템-구성-정보-확인하기&#34;&gt;1장 - 시스템 구성 정보 확인하기&lt;/h1&gt;

&lt;h3 id=&#34;커널-정보-확인하기&#34;&gt;커널 정보 확인하기&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;uname -a # 커널 버전 확인dmesg #커널 디버그 메세지
cat /boot/config-`uname -r` | more # 커널 컴파일 옵션 확인
cat /boot/config-`uname -r` | grep -i config_function_tracer
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;ftrace와 같은 커널 함수 레벨의 추적이 필요할 경우 CONFIG_FUNCTION_TRACER 같은 옵션이 커널 컴파일 옵션에 포함되어있어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cpu-정보-확인하기&#34;&gt;CPU 정보 확인하기&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dmidecode -t processor
cat /proc/cpuinfo
lscpu
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;socket : number of CPU&lt;/li&gt;
&lt;li&gt;core : number of cores per CPU&lt;/li&gt;
&lt;li&gt;시스템 최대 쓰레드 수 : # of socket * # of core * 2(Hyperthreading, Hyperthreading 지원 안할시 * 1)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;memory-정보-확인하기&#34;&gt;Memory 정보 확인하기&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dmidecode -t memory
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Physical memory array : 하나의 CPU socket에 함께 할당된 물리 메모리의 그룹&lt;/li&gt;
&lt;li&gt;Memory device : 실제로 시스템에 꽂혀있는 메모리.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;디스크-정보-확인하기&#34;&gt;디스크 정보 확인하기&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;df -h
smartctl -a /dev/sda
smartctl -a /dev/sda -d cciss,0 # lsmod 를 통해 알아낸 현재 시스템 사용중인 raid 컨트롤러 드라이버를 명시
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;sda : scsi 방식 또는 sata, sas 방식 같은 일반적 디스크&lt;/li&gt;
&lt;li&gt;hda : 개인용 컴퓨터용인 IDE 방식의 디스크&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;네트워크-정보-확인하기&#34;&gt;네트워크 정보 확인하기&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lspci | grep -i ether
ethtool eth0
ethtool -g eth0 # Ring buffer의 크기를 확인 가능, 볼땐 -g, 설정할땐 -G 옵션
ethtool -k eth0 # 현재 NIC의 다양한 성능 최적화 옵션 확인, 마찬가지로 볼땐 소문자 -k, 설정할땐 -K
ethtool -i eth0 # NIC의 커널 모듈 정보 표시
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Ring buffer : 네트워크 카드의 버퍼 공간을 의미. 크기가 maximum으로 세팅 되어있지 않으면 네트워크 성능 저하 발생 가능&lt;/li&gt;
&lt;li&gt;tcp-offload : MTU 이상의 크기를 가지는 패킷의 분할작업을 CPU 가 아닌 NIC가 직접 처리하여 CPU 성능 부담 줄이고 패킷 처리 성능 높임.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;출처 : &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788966264049&amp;amp;orderClick=LEA&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;DevOps와 SE를 위한 리눅스 커널 이야기&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2019 Books I Read</title>
      <link>https://augustkang.github.io/2019/2019-books-i-read/</link>
      <pubDate>Sun, 09 Jun 2019 17:57:32 +0900</pubDate>
      
      <guid>https://augustkang.github.io/2019/2019-books-i-read/</guid>
      <description>

&lt;h1 id=&#34;2019년에-읽은-책들을-나열하는-포스트-업데이트중&#34;&gt;2019년에 읽은 책들을 나열하는 포스트(업데이트중)&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788936434267&amp;amp;orderClick=LAG&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;아몬드(손원평)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788937480485&amp;amp;orderClick=LEB&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;사람의 아들(이문열)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791196334703&amp;amp;orderClick=LAH&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;지방 대사 켜는 스위치온 다이어트(박용우)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788954655972&amp;amp;orderClick=LAH&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;여행의 이유(김영하)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791195842032&amp;amp;orderClick=LAH&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;나는 왜 정치를 하는가(유승민)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788965962502&amp;amp;orderClick=LAH&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;히트 리프레시(Satya Nadella)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791188331222&amp;amp;orderClick=LAH&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;어느 애주가의 고백(Daniel Schreiber)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-17 &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791157031030&amp;amp;orderClick=LAH&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;더골(Eliyahu Moshe Goldratt)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-18 &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788937473074&amp;amp;orderClick=LAG&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;한국이 싫어서(장강명)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-18 &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791160500165&amp;amp;orderClick=LEA&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;인프라 엔지니어의 교과서: 시스템 구축과 관리편&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-22 &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788937436888&amp;amp;orderClick=LAG&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;당선, 합격, 계급(장강명)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-30 &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;barcode=9788991290464&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;소크라테스의 변론 크리톤 파이돈 향연(Plato)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-04 &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788968483547&amp;amp;orderClick=LAG&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hello Coding 알고리즘(Aditya Y. Bhargava)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-07 &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791188621224&amp;amp;orderClick=LAG&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;개발자도 궁금한 IT 인프라(정송화, 김영선, 전성민)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-09 &lt;a href=&#34;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791196199807&amp;amp;orderClick=LAG&amp;amp;Kc=&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;서른의 반격(손원평)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How to Git Pull With Submodules</title>
      <link>https://augustkang.github.io/2019/how-to-git-pull-with-submodules/</link>
      <pubDate>Mon, 03 Jun 2019 21:23:32 +0900</pubDate>
      
      <guid>https://augustkang.github.io/2019/how-to-git-pull-with-submodules/</guid>
      <description>&lt;p&gt;집 데탑에만 블로그 소스가 있는지라 회사 컴에서도 작성할 수 있게끔 내 블로그 repo를 clone하였다.
근데 그냥 clone을 하니 submodule로 등록한 repo는 같이 clone이 안되더라.
구글링을 좀 해본 결과 &lt;a href=&#34;http://openmetric.org/til/programming/git-pull-with-submodule/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;링크&lt;/a&gt;와 같이&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;clone 이후에 해당 repo의 root에서 위 명령어를 통해 submodule을 업데이트 해주니 해결이 되었다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://augustkang.github.io/about/</link>
      <pubDate>Sun, 02 Jun 2019 17:40:10 +0900</pubDate>
      
      <guid>https://augustkang.github.io/about/</guid>
      <description>&lt;p&gt;Welcome to my blog.&lt;/p&gt;

&lt;p&gt;I am currently working as System engineer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://augustkang.github.io/2019/first-post/</link>
      <pubDate>Sun, 02 Jun 2019 17:36:40 +0900</pubDate>
      
      <guid>https://augustkang.github.io/2019/first-post/</guid>
      <description>&lt;p&gt;I just created my first blog :D&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
